<?xml version="1.0"?>
<doc>
<assembly>
<name>
StreamDataLogger
</name>
</assembly>
<members>
<member name="T:StreamDataLogger.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:StreamDataLogger.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:StreamDataLogger.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:StreamDataLogger.Logger.LowerWordFirst">
 <summary>
 Property to get/set if the lower word is returned first for a 32-bit register
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.Buffers">
 <summary>
 The total number of buffers to read in the stream. Each buffer is the reglist read numcaptures times
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.Captures">
 <summary>
 Number of captures of the reglist to perform in a single buffer.
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.BuffersPerWrite">
 <summary>
 The number of buffers to accumulate before a file write operation.
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.FileMaxDataRows">
 <summary>
 Number of data rows in a single file.
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.BufferTimeoutSeconds">
 <summary>
 Timeout period before stream cancellation if a buffer is not recieved.
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.FileBaseName">
 <summary>
 File base name. File numbers will be appended after this.
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.FilePath">
 <summary>
 Base path for the output files
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.FileExtension">
 <summary>
 File extension. Defaults to "csv"
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.RegList">
 <summary>
 Register list to stream from. Can be on multiple pages
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.DataSeparator">
 <summary>
 String to seperate data elements. Defaults to ','
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.Busy">
 <summary>
 Readonly property to check if a stream is currently running.
 </summary>
 <returns></returns>
</member>
<member name="P:StreamDataLogger.Logger.TimeoutOccurred">
 <summary>
 Readonly property to check if a timeout has occurred.
 </summary>
 <returns></returns>
</member>
<member name="E:StreamDataLogger.Logger.ProgressChanged">
 <summary>
 This event is raised when a new progress tick has been made during a stream. Values will be in range (0 - 100)
 </summary>
 <param name="e"></param>
</member>
<member name="E:StreamDataLogger.Logger.RunAsyncCompleted">
 <summary>
 This event is raised when all data is done being written to the disk.
 </summary>
</member>
<member name="M:StreamDataLogger.Logger.#ctor(StreamDataLogger.IStreamEventProducer@,adisInterface.IBufferedStreamProducer@)">
 <summary>
 Constructor, takes stream producer and event producer
 </summary>
 <param name="EventProducer"></param>
 <param name="DataProducer"></param>
</member>
<member name="M:StreamDataLogger.Logger.RunAsync">
 <summary>
 Starts an asynchronous stream
 </summary>
 <returns>If the stream start was successful. A stream cannot be started until previous stream has been terminated</returns>
</member>
<member name="M:StreamDataLogger.Logger.CancelAsync">
 <summary>
 Cancels a currently running stream.
 </summary>
</member>
<member name="M:StreamDataLogger.Logger.TimeoutCallback">
 <summary>
 Cancels if the timeout occurred
 </summary>
</member>
</members>
</doc>
